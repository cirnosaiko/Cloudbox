#########################################################################
# Title:         Cloudbox: Docker | Default Variables                   #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
################################
# Role
################################

################################
# Packages
################################

# Basic
docker_packages_docker_version: ""

# Docker APT Key
docker_packages_docker_apt_key_id: 0EBFCD88
docker_packages_docker_apt_key_url: https://download.docker.com/linux/ubuntu/gpg

# Docker APT Repository
docker_packages_docker_apt_repo_url: >-
  deb [arch=amd64]
  https://download.docker.com/linux/{{ ansible_distribution | lower }}
  {{ ansible_distribution_release }}
  {{ docker_packages_docker_apt_repo_version }}
docker_packages_docker_apt_repo_version: edge
docker_packages_docker_apt_repo_filename: docker

# Docker CE
docker_packages_docker_ce_friendly_name: "Docker CE"
docker_packages_docker_ce_package_name_simple: "docker-ce"
docker_packages_docker_ce_package_name_specific: "{{ docker_packages_docker_ce_package_name_simple
                                                          + '=*'
                                                          + (docker_packages_docker_ce_package_version | string)
                                                          + '*~'
                                                          + (ansible_distribution | lower)
                                                          + '-'
                                                          + (ansible_distribution_release | lower) }}"
docker_packages_docker_ce_package_name: "{{ docker_packages_docker_ce_package_name_specific
                                            if (docker_packages_docker_ce_package_version | trim | length > 0)
                                                and (docker_packages_docker_ce_package_state | trim | lower != 'present')
                                            else docker_packages_docker_ce_package_name_simple }}"
docker_packages_docker_ce_package_version: "{{ docker_packages_docker_version }}"
docker_packages_docker_ce_package_state: "latest"
docker_packages_docker_ce_package_path: "/usr/bin/dockerd"
docker_packages_docker_ce_dpkg_name: "docker-ce"
docker_packages_docker_ce_dpkg_hold: yes

# Docker CE CLI
docker_packages_docker_ce_cli_friendly_name: "Docker CE CLI"
docker_packages_docker_ce_cli_package_name_simple: "docker-ce-cli"
docker_packages_docker_ce_cli_package_name_specific: "{{ docker_packages_docker_ce_cli_package_name_simple
                                                              + '=*'
                                                              + (docker_packages_docker_ce_package_version | string)
                                                              + '*~'
                                                              + (ansible_distribution | lower)
                                                              + '-'
                                                              + (ansible_distribution_release | lower) }}"
docker_packages_docker_ce_cli_package_name: "{{ docker_packages_docker_ce_cli_package_name_specific
                                                if (docker_packages_docker_ce_cli_package_version | trim | length > 0)
                                                    and (docker_packages_docker_ce_cli_package_state | trim | lower != 'present')
                                                else docker_packages_docker_ce_cli_package_name_simple }}"
docker_packages_docker_ce_cli_package_version: "{{ docker_packages_docker_version }}"
docker_packages_docker_ce_cli_package_state: "latest"
docker_packages_docker_ce_cli_package_path: "/usr/bin/docker"
docker_packages_docker_ce_cli_dpkg_name: "docker-ce-cli"
docker_packages_docker_ce_cli_dpkg_hold: yes

# Containerd
docker_packages_containerd_io_friendly_name: "Containerd"
docker_packages_containerd_io_package_name: "containerd.io"
docker_packages_containerd_io_package_state: "latest"
docker_packages_containerd_io_package_path: "/usr/bin/containerd"
docker_packages_containerd_io_dpkg_name: "containerd.io"
docker_packages_containerd_io_dpkg_hold: yes


################################
# Global
################################

# Envs
docker_envs_reverse_proxy_common:
  VIRTUAL_HOST: "{{ lookup('vars', role_name + '_web_subdomain') }}.{{ lookup('vars', role_name + '_web_domain', default=user.domain) }}"
  VIRTUAL_PORT: "{{ lookup('vars', role_name + '_web_port') }}"
  LETSENCRYPT_HOST: "{{ lookup('vars', role_name + '_web_subdomain') }}.{{ lookup('vars', role_name + '_web_domain', default=user.domain) }}"
  LETSENCRYPT_EMAIL: "{{ user.email }}"

# Volumes
docker_volumes_downloads_nzbs: "{{ [downloads.nzbs + ':/downloads/nzbs']
                                    if nzbs_downloads_path_is_defined
                                    else [] }}"
docker_volumes_downloads_torrents: "{{ [downloads.torrents + ':/downloads/torrents']
                                        if torrents_downloads_path_is_defined
                                        else [] }}"
docker_volumes_downloads_common: "{{ docker_volumes_downloads_nzbs
                                          + docker_volumes_downloads_torrents }}"

# Hosts
docker_hosts_common: []

# Labels
docker_labels_common_default_cloudbox_managed_string: "com.github.cloudbox.cloudbox_managed=true"
docker_labels_common_default_cloudbox_managed_dict: "{{
  { docker_labels_common_default_cloudbox_managed_string.split('=')[0]:
    docker_labels_common_default_cloudbox_managed_string.split('=')[1]
  } }}"
docker_labels_common_default: {}
docker_labels_common_custom: {}
docker_labels_common: "{{ docker_labels_common_default_cloudbox_managed_dict
                              | combine(docker_labels_common_default)
                              | combine(docker_labels_common_custom) }}"

# Networks
docker_networks_common_default_name: cloudbox
docker_networks_common_default:
  - name: "{{ docker_networks_common_default_name }}"
    aliases:
      - "{{ lookup('vars', role_name + '_docker_networks_alias') }}"
docker_networks_common_custom: []
docker_networks_common: "{{ docker_networks_common_default
                                + docker_networks_common_default }}"
