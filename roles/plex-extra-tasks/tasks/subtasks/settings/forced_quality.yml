##########################################################################
# Title:         Cloudbox: Plex-Extra-Tasks | Settings | Forced Quality  #
# Author(s):     desimaniac                                              #
# URL:           https://github.com/cloudbox/cloudbox                    #
# --                                                                     #
#         Part of the Cloudbox project: https://cloudbox.works           #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
#   Based on the work by Michael Zemsky (https://github.com/zmike808)    #
##########################################################################
---
- name: Settings | Forced Quality | Install 'lxml' pip module
  raw: pip install lxml

- name: Settings | Forced Quality | Wait for 'Preferences.xml' to be created by Plex
  wait_for:
    path: "{{ plex_paths_config_location }}"
    state: present

# Preferences.xml | 'forceAutoAdjustQuality'
- name: Settings | Forced Quality | Set 'forceAutoAdjustQuality' in 'Preferences.xml' to
    '{{ plex_extra_tasks_forced_quality_settings_auto_adjust_quality_wording }}'
  xml:
    path: "{{ plex_paths_config_location }}"
    xpath: /Preferences
    attribute: forceAutoAdjustQuality
    value: "{{ plex_extra_tasks_forced_quality_settings_auto_adjust_quality_xml_value }}"
    state: present
  become: yes
  become_user: "{{ user.name }}"
  register: x
  ignore_errors: yes

# Preferences.xml | 'AllowHighOutputBitrates'
- name: Settings | Forced Quality | Set 'AllowHighOutputBitrates' in 'Preferences.xml' to
    '{{ plex_extra_tasks_forced_quality_settings_high_output_bitrate_wording }}'
  xml:
    path: "{{ plex_paths_config_location }}"
    xpath: /Preferences
    attribute: AllowHighOutputBitrates
    value: "{{ plex_extra_tasks_forced_quality_settings_high_output_bitrate_xml_value }}"
    state: present
  become: yes
  become_user: "{{ user.name }}"
  register: y
  ignore_errors: yes

- name: Settings | Forced Quality | Restart plex container
  docker_container:
    name: "{{ plex_docker_container }}"
    state: started
    restart: yes
  when: ('plex_forced_quality' in ansible_run_tags) and (x.changed or y.changed)
